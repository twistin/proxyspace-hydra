BUNDLE DE LIVE CODING · RESUMEN

Contenido esencial:

- `start_live_session.sh` · script maestro (proxy + oF + SuperCollider).
- `setup/` · Setup.scd, Snippets, SynthDefs, patrones, sample-audition, I Ching…
- `samples/` · estructura mínima para sets (audio/, set1/, set1lfx/).
- `sesiones/` · plantillas de show (`_TEMPLATE_SESION.scd`, `2024-10-29_ejemplo_completo.scd`, `2025-10-29_landscapes.scd`, etc.).
- `osc-proxy/` · proxy Node.js listo con package.json y tests.
- `of/` · proyecto openFrameworks:
  - `src/` (main.cpp, ofApp.cpp/h, WordInstance.cpp/h),
  - `bin/data/landscapes/` con README,
  - `of.xcodeproj`, Makefile, config.make.

Primeros pasos:
1. Coloca tus samples en `samples/` (ajusta `~samplesRelative` en `sound2.scd` si cambias rutas).
2. Añade imágenes en `of/bin/data/landscapes/`.
3. Desde esta carpeta ejecuta `./start_live_session.sh`.
4. En SuperCollider evalúa la plantilla y lanza `SoundSessionStartAll.();`.
5. Inicia el patrón base con `SoundSessionPlay.();` y toca tu set.

Notas:
- El proxy Node detecta `/kick`, `/bass_level`, `/melody_note` y los reenvía a openFrameworks e Hydra.
- `sound2.scd` contiene la lógica de análisis multibanda y helpers para arrancar/limpiar.
- Si `of/bin/ofDebug.app` no existe, compila el proyecto oF una vez con Xcode o make.

Este bundle está listo para copiarse a otra máquina y tener el mismo entorno de live coding en minutos.
